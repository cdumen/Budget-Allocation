}
}
# add total as a row
total <- data.frame(total, stringsAsFactors = F)
colnames(total) <- colnames(summary_table)
summary_table <- rbind(summary_table, total)
# add ROIs
summary_table$currentROI <- summary_table$currentReturn / summary_table$currentSpend
summary_table$newROI <- summary_table$value / summary_table$investmentSpend
# add % change
summary_table$spendChange <- (summary_table$investmentSpend - summary_table$currentSpend) / summary_table$currentSpend
summary_table$returnChange <- (summary_table$value - summary_table$currentReturn) / summary_table$currentReturn
summary_table$ROIChange <- (summary_table$newROI - summary_table$currentROI) / summary_table$currentROI
# order columns
summary_table <- summary_table[c('investment', 'cat1', 'cat2',
'currentSpend', 'investmentSpend', 'spendChange',
'currentReturn', 'value', 'returnChange',
'currentROI','newROI','ROIChange','spendUpTo')]
# rename columns
colnames(summary_table) <- c('Investment', 'Group 1', 'Group 2',
'Current Spend', 'New Spend', 'Spend Change',
'Current Return', 'New Return', 'Return Change',
'Current ROI', 'New ROI', 'ROI Change', 'Spend Up To')
# summary table - all ----
summary_table_all <- summary_table
summary_table_all[c('Group 1', 'Group 2')] <- NULL
# convert NAs in 'Spend Up To' column to 0
summary_table_all[is.na(summary_table_all$`Spend Up To`), 'Spend Up To'] <- 0
# format table
# summary table - group 1 ----
# convert to data.table for easier manipulation
summary_table_cat1 <- data.table(summary_table)
# list of columns we want to keep after aggregating
keep_cols <- colnames(summary_table)[4:ncol(summary_table)]
# aggregate by 'Group 1'
summary_table_cat1 <- summary_table_cat1[, lapply(.SD, sum, na.rm=T), by=`Group 1`, .SDcols = keep_cols]
# correct ROIs
summary_table_cat1[, `Current ROI` := `Current Return` / `Current Spend`]
summary_table_cat1[, `New ROI` := `New Return` / `New Spend`]
# correct the percentages
summary_table_cat1[, `Spend Change` := (`New Spend` - `Current Spend`) / `Current Spend`]
summary_table_cat1[, `Return Change` := (`New Return` - `Current Return`) / `Current Return`]
summary_table_cat1[, `ROI Change` := (`New ROI` - `Current ROI`) / `Current ROI`]
# convert back to data.frame
summary_table_cat1 <- data.frame(summary_table_cat1, check.names = F)
# format table
# format_df(summary_table_cat1, accounting=c('Current Spend', 'New Spend', 'Current Return', 'New Return', 'Current ROI', 'New ROI', 'Spend Up To'),
#           percent=c('Spend Change', 'Return Change', 'ROI Change'))
# summary table - group 2 ----
# convert to data.table for easier manipulation
summary_table_cat2 <- data.table(summary_table)
# list of columns we want to keep after aggregating
keep_cols <- colnames(summary_table)[4:ncol(summary_table)]
# aggregate by 'Group 2'
summary_table_cat2 <- summary_table_cat2[, lapply(.SD, sum, na.rm=T), by=`Group 2`, .SDcols = keep_cols]
# correct ROIs
summary_table_cat2[, `Current ROI` := `Current Return` / `Current Spend`]
summary_table_cat2[, `New ROI` := `New Return` / `New Spend`]
# correct the percentages
summary_table_cat2[, `Spend Change` := (`New Spend` - `Current Spend`) / `Current Spend`]
summary_table_cat2[, `Return Change` := (`New Return` - `Current Return`) / `Current Return`]
summary_table_cat2[, `ROI Change` := (`New ROI` - `Current ROI`) / `Current ROI`]
# convert back to data.frame
summary_table_cat2 <- data.frame(summary_table_cat2, check.names = F)
# round to 2 decimal place
summary_table_cat2 <- round_df(summary_table_cat2, 2)
# drop summary_table dataframe
rm(summary_table)
# line charts -------
# create response curves for cat1 and cat2
cumRet_melt_cat1 <- agg_rspCurves(dt, 'Category1', max_curve)
cumRet_melt_cat2 <- agg_rspCurves(dt, 'Category2', max_curve)
# add these to cumRet_melt
cumRet_melt <- rbind(rbind(cumRet_melt, cumRet_melt_cat1), cumRet_melt_cat2)
rm(cumRet_melt_cat1, cumRet_melt_cat2)
# current spend and return
current <- cur_spend_ret(summary_table_names = c('summary_table_all', 'summary_table_cat1', 'summary_table_cat2'))
# charting: response curves plots ----
# menu where user can navigate across categories
menu_line <- list(
type = "buttons",
direction = "right",
xanchor = 'center',
yanchor = "top",
bgcolor='white',
font=list(color='#A9A9A9'),
pad = list('r'= 0, 't'= 10, 'b' = 10),
x = 0.5,
y = 1.01,
buttons = list(
list(method = "restyle",
args = list("visible", c(rep(list(T), nInvestments),
rep(list(F), nInvestments_cat1),
rep(list(F), nInvestments_cat2),
rep(list(T), nInvestments),
rep(list(F), nInvestments_cat1),
rep(list(F), nInvestments_cat2),
rep(list(F), nInvestments),
rep(list(F), nInvestments))),
label = "All Investments"),
list(method = "restyle",
args = list("visible", c(rep(list(F), nInvestments),
rep(list(T), nInvestments_cat1),
rep(list(F), nInvestments_cat2),
rep(list(F), nInvestments),
rep(list(T), nInvestments_cat1),
rep(list(F), nInvestments_cat2),
rep(list(F), nInvestments),
rep(list(F), nInvestments))),
label = "Group 1"),
list(method = "restyle",
args = list("visible", c(rep(list(F), nInvestments),
rep(list(F), nInvestments_cat1),
rep(list(T), nInvestments_cat2),
rep(list(F), nInvestments),
rep(list(F), nInvestments_cat1),
rep(list(T), nInvestments_cat2),
rep(list(F), nInvestments),
rep(list(F), nInvestments))),
label = "Group 2")
))
# current dot annotation on chart
current_dot <- list(
x = 0.1,
y = 0.6,
text = '<span style="font-size:20px;">â€¢</span> shows current\n return / spend',
xref = "paper",
yref = "paper",
showarrow = F,
font = list(color='#A9A9A9', size=12),
opacity = 0.5
)
# create set of line charts
plot_ly(data = cumRet_melt, x = ~spend, y = ~value, type = 'scatter', mode = 'lines',
color = ~variable, colors = c(colours, colours_cat1, colours_cat2),
visible=F) %>%
add_trace(data = current, x = ~`Current Spend`, y = ~`Current Return`, mode='markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
color = ~Investment, showlegend=F) %>%
# for some reason defeault view only displays correctly if first layer is added again (not sure if there is a more elegant solution)
add_trace(data = cumRet_melt[cumRet_melt$variable %in% dt$Investment, ], x = ~spend, y = ~value, type = 'scatter', mode = 'lines',
color = ~variable, colors=c(colours, colours_cat1, colours_cat2),
visible=T) %>%
add_trace(data = current[current$Investment %in% dt$Investment, ], x = ~`Current Spend`, y = ~`Current Return`, mode = 'markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
color = ~Investment, showlegend=F,
visible=T) %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'),
hoverlabel = list(bordercolor='white', font=list(color='white'), namelength=-1),
updatemenus = list(menu_line),
annotations = list(current_dot))
# total response ----
# retrieve record of cumulative return from earlier allocation
total_cumRet <- allocation$cumRet
# create total return column
total_cumRet$totalReturn <- rowSums(total_cumRet[-1])
# take only spend and cumulative return
total_cumRet <- total_cumRet[c('totalSpend', 'totalReturn')]
# new total spend and return
total_new <- summary_table_all[summary_table_all$Investment == 'Total', c('New Spend', 'New Return')]
# plot chart
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'line') %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'marker')
head(total_cumRet)
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'line',
name = 'Total Cumulative Return') %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'marker')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'line',
name = 'Total Return') %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'marker')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'line',
name = 'Total Return') %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'marker',
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'line',
name = 'Total Return', line = list(color = 'black')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'marker',
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = 'black')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = 'black')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, line = list(color = 'white', fill = '#DEB887', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'lines',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
total_new
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = ~`New Spend`, y = ~`New Return`, type = 'scatter', mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(data = total_new, x = `New Spend`, y = `New Return`, type = 'scatter', mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
total_new[1,1]
total_new
total_new[1,2]
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
marker = list(size = 9, color = '#DEB887'),
name = 'New Return')
plot_ly(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 9, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 12, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
runApp()
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#ce954b', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return')
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'))
plot_ly(data = cumRet_melt, x = ~spend, y = ~value, type = 'scatter', mode = 'lines',
color = ~variable, colors = c(colours, colours_cat1, colours_cat2),
visible=F) %>%
add_trace(data = current, x = ~`Current Spend`, y = ~`Current Return`, mode='markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
color = ~Investment, showlegend=F) %>%
# for some reason defeault view only displays correctly if first layer is added again (not sure if there is a more elegant solution)
add_trace(data = cumRet_melt[cumRet_melt$variable %in% dt$Investment, ], x = ~spend, y = ~value, type = 'scatter', mode = 'lines',
color = ~variable, colors=c(colours, colours_cat1, colours_cat2),
visible=T) %>%
add_trace(data = current[current$Investment %in% dt$Investment, ], x = ~`Current Spend`, y = ~`Current Return`, mode = 'markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
color = ~Investment, showlegend=F,
visible=T) %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'),
hoverlabel = list(bordercolor='white', font=list(color='white'), namelength=-1),
updatemenus = list(menu_line),
annotations = list(current_dot))
plot_ly(data = cumRet_melt, x = ~spend, y = ~value, type = 'scatter', mode = 'lines',
color = ~variable, colors = c(colours, colours_cat1, colours_cat2),
visible=F) %>%
add_trace(data = current, x = ~`Current Spend`, y = ~`Current Return`, mode='markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
color = ~Investment, showlegend=F) %>%
# for some reason defeault view only displays correctly if first layer is added again (not sure if there is a more elegant solution)
add_trace(data = cumRet_melt[cumRet_melt$variable %in% dt$Investment, ], x = ~spend, y = ~value, type = 'scatter', mode = 'lines',
color = ~variable, colors=c(colours, colours_cat1, colours_cat2),
visible=T) %>%
add_trace(data = current[current$Investment %in% dt$Investment, ], x = ~`Current Spend`, y = ~`Current Return`, mode = 'markers',
marker = list(size = 9, line = list(color = 'white', width = 1)),
color = ~Investment, showlegend=F,
visible=T) %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'),
hoverlabel = list(bordercolor='white', font=list(color='white'), namelength=-1),
updatemenus = list(menu_line),
annotations = list(current_dot))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'),
Xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=T, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=F, showline=F, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=F, showline=F, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showspikes=T, showgrid=T, showline=F, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showgrid=T, showline=F, hoverformat=',f'))
plot_ly(data = total_cumRet, x = ~totalSpend, y = ~totalReturn, type = 'scatter', mode = 'lines',
name = 'Total Return', line = list(color = '#4b84ce')) %>%
add_trace(x = total_new[1,1], y = total_new[1,2], mode = 'markers',
line = list(color = 'white'),
marker = list(size = 11, color = '#DEB887', line = list(color = 'white', width = 1)),
name = 'New Return') %>%
layout(yaxis = list(title='Return', spikecolor='grey', spikethickness=0.1, spikedash='solid', showspikes=T, showgrid=T, showline=F, hoverformat=',f'),
xaxis = list(title='Spend', spikecolor='grey', spikethickness=0.1, spikedash='solid', showspikes=T, showgrid=T, showline=F, hoverformat=',f'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/Git/Budget-Allocation/app/calcs/main.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/Git/Budget-Allocation/app/calcs/main.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/Git/Budget-Allocation/app/calcs/main.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/Git/Budget-Allocation/app/calcs/main.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Documents/Git/Budget-Allocation/app/calcs/main.R', echo=TRUE)
runApp()
head(allocation$marRet)
(total_cumRet - increment)/increment
(total_cumRet$totalReturn - increment)/increment
